[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools" ]

[project]
name = "testbook_rohitsanjay"
version = "0.4.2"
description = "A unit testing framework for Jupyter Notebooks"
readme = "README.md"
keywords = [ "jupyter", "notebook", "nteract", "unit-testing" ]
license = { file = "LICENSE" }
maintainers = [
  { name = "Nteract Contributors", email = "nteract@googlegroups.com" },
  { name = "Rohit Sanjay", email = "sanjay.rohit2@gmail.com" },
  { name = "Matthew Seal", email = "mseal007@gmail.com" },
]
authors = [
  { name = "Nteract Contributors", email = "nteract@googlegroups.com" },
  { name = "Rohit Sanjay", email = "sanjay.rohit2@gmail.com" },
  { name = "Matthew Seal", email = "mseal007@gmail.com" },
]
requires-python = ">=3.6"

classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Testing :: Mocking",
  "Topic :: Software Development :: Testing :: Unit",
]
dependencies = [
  "nbclient>=0.4",
  "nbformat>=5.0.4",
]
optional-dependencies.dev = [
  "ruff",
  "bumpversion",
  "check-manifest",
  "codecov",
  "coverage",
  "ipykernel",
  "ipython",
  "ipywidgets",
  "pandas",
  "pip>=18.1",
  "pytest>=4.1",
  "pytest-cov>=2.6.1",
  "setuptools>=38.6",
  "tox",
  "build",
  "twine>=1.11",
  "xmltodict",
]
optional-dependencies.test = [
  "myst-parser==0.9.1",
  "sphinx>=1.7,<3",
  "sphinx-book-theme==0.0.35",
]
urls.Documentation = "https://testbook.readthedocs.io"
urls.Funding = "https://nteract.io"
urls.Issues = "https://github.com/nteract/testbook/issues"
urls.Repository = "https://github.com/nteract/testbook/"

[tool.pytest.ini_options]
filterwarnings = "always"
testpaths = [
  "testbook/tests/",
]

[tool.coverage.run]
branch = false
omit = [
  "testbook/tests/*",
  "testbook/_version.py",
]

[tool.coverage.report]
exclude_lines = [
  "if self\\.debug:",
  "pragma: no cover",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == '__main__':",
]
ignore_errors = true
omit = [
  "testbook/tests/*",
  "testbook/_version.py",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "testbook/__init__.py",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
